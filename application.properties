
##  ----------------------- Portal URLs -------------------------------------------------------------------------------

#QA.appUrl = https://qa.assistive.site/auth/login
preprod.appUrl = https://preprod.1channel.co/
#prod.appUrl = https://login.assistive.site/




##  ------------------- Login Credentials -----------------------------------------------------------------------------

preprod.username = testemailqa@1channel.co
preprod.password = K(460848703994az

# custom
preprod.genericUsername = soumya@getassistive.com
preprod.testUsername = restAssuredtest@mailinator.com
preprod.demoUsername = soumya@1channel.co

preprod.genericPassword = 12345678
preprod.testPassword = 12345678
preprod.demoPassword = 12345678
# K(460848703994az

# projectIds
preprod.projectId = 436
# restAssuredtest@mailinator.com - 436




##  ----------------------- Test Data for INB: ------------------------------------------------------------------------

preprod.custBulkUpload_xlsx = bulkUploaded_Files/INB_Collection_433BulkUpload.xlsx
# Files/demo.xlsx
# Files/INB_Collection_433BulkUpload.xlsx
# Files/uploadTest1.xlsx
preprod.downloadedFileDir = bulkUpload_Downloaded_Files
preprod.mailVerifyURL = https://www.microsoft.com/en-us/microsoft-365/outlook/log-in

preprod.testEmailId = testemailqa@1channel.co
preprod.testEmailPassword = K(460848703994az
preprod.testMobileNo = 8420362431

preprod.inbUser = sominb0001@gmail.com
preprod.inbUserPassword = 12345678




##  ----------------------- build APK: --------------------------------------------------------------------------------

preprod.appVersion = 57
preprod.platformVersion = 15.0
preprod.imgUploadPath = img_uploads/testImage.png




#Calendar Date Range Daily activity report AUT-25...
preprod.daily_calendar_startDate = 14-02-2023
preprod.daily_calendar_endDate =  16-02-2023

#Calendar Date Range Detailed activity report AUT-26...
preprod.detailed_calendar_startDay = 1
preprod.detailed_calendar_startMonth = 01
preprod.detailed_calendar_startYear = 2023
preprod.detailed_calendar_endDay = 20
preprod.detailed_calendar_endMonth = 03
preprod.detailed_calendar_endYear = 2023

#Calendar Date Range CRM Activities AUT-61...
preprod.CRM_activities_startDate = 01-03-2023
preprod.CRM_activities_endDate =  31-03-2023




##  ----------------------- Template Management & Debug Configuration -------------------------------------------------

# Auto-capture templates when elements are found via XPath
# When enabled, the system automatically saves templates for successfully found elements
# These templates can be used for future AI-based element finding
preprod.template.auto.capture.enabled = true

# Maximum number of versions to keep per element template
# When a new version is captured, the oldest version is deleted if this limit is exceeded
# Recommended: 3 versions to handle minor UI changes
preprod.template.max.versions.per.element = 3

# Maximum folder size for template storage (in MB)
# When exceeded, a new version folder is created
preprod.template.max.folder.size.mb = 100

# Maximum number of version folders to keep
# Older folders are rotated out when this limit is reached
preprod.template.max.version.folders = 5

# Enable duplicate detection using visual hashing
# Prevents saving identical templates with different filenames
preprod.template.duplicate.detection.enabled = true

# Visual similarity threshold for duplicate detection (0.0 to 1.0)
# Higher values = more strict matching. Recommended: 0.85
preprod.template.visual.similarity.threshold = 0.85

# Template cleanup age in days
# Templates older than this will be cleaned up automatically
preprod.template.cleanup.age.days = 60


# ----------------------- Debug Mode Configuration (Visual Rectangle Drawing) -----------------------------------------

# Enable debug mode to save images with rectangles showing matched regions
# When enabled, creates visual debug images for both successful and failed template matches
# IMPORTANT: Enable this during debugging/development, disable in production/CI for performance
# Recommended: false (only enable when debugging template matching issues)
preprod.template.debug.mode.enabled = true

# Debug images output folder
# All debug images with rectangles will be saved to this folder
# Structure: debug_folder/scenario_name/success|failures/template_name_match_confidence_timestamp.png
preprod.template.debug.folder = screenshots/debug_matches

# Organize debug images by test scenario
# When true: screenshots/debug_matches/Login_Flow/success/button_match_0.92.png
# When false: screenshots/debug_matches/success/button_match_0.92.png
# Recommended: true (easier to review matches for specific test scenarios)
preprod.template.debug.organize.by.scenario = true

# Auto-generate HTML viewer for debug images
# When enabled, automatically generates an interactive HTML viewer after test runs
# The viewer displays all debug images with filtering, stats, and fullscreen view
# Recommended: true (makes reviewing debug images much easier)
preprod.template.debug.viewer.auto.generate = true

# Output path for generated HTML viewer
# The HTML file will be created at this location
# Default: screenshots/debug_matches_viewer.html (in the same parent folder as debug images)
preprod.template.debug.viewer.output.path = screenshots/debug_matches_viewer.html

# Debug match metadata retention period (in days)
# Match data is saved to JSON files (separate from images) and kept for this duration
# Images are deleted with mvn clean, but metadata persists for historical analysis
# Default: 7 days (allows reviewing match history from last week)
preprod.template.debug.metadata.retention.days = 7

# ----------------------- Usage Notes --------------------------------------------------------------------------------
#
# To enable debug mode for troubleshooting template matching and OCR issues:
#   1. Set preprod.template.debug.mode.enabled = true
#   2. Run your tests
#   3. Check screenshots/debug_matches/ folder for visual debug images
#
# OpenCV Template Matching Debug Images (prefix: opencv_):
#   - Green rectangles = excellent matches (confidence >= 0.9)
#   - Yellow rectangles = good matches (0.8 <= confidence < 0.9)
#   - Red rectangles = failed matches (confidence < 0.8) showing best attempt
#   - Shows: Rectangle around matched region + confidence score + method + click crosshair
#
# OCR Detection Debug Images (prefix: ocr_):
#   - Blue rectangles = label text detected by OCR
#   - Green rectangles = hint/value text detected below label
#   - Orange rectangles = colored region detected by color-based strategy
#   - Red crosshair = final calculated click point (bright red = success, dark red = failure)
#   - Shows: Strategy name (Two-pass_OCR, Color-based, Smart_offset) + SUCCESS/FAIL status
#
# Cleanup and Historical Data:
#   - Debug images (PNG files) are cleaned automatically by Maven when running 'mvn clean'
#   - Match metadata (JSON files) are preserved in screenshots/debug_matches_metadata/ for 7 days
#   - HTML viewer loads data from all JSON files (last 7 days) for historical analysis
#   - Images deleted after 'mvn clean' show as "Image deleted" in viewer, but stats remain
#   - Old JSON files are automatically cleaned based on retention.days configuration
#   - Benefit: Review AI matching trends over time without storing large image files
#
# Performance impact:
#   - Debug mode adds ~200-500ms per template match / OCR detection (image processing + file I/O)
#   - Disable in CI/production environments for optimal performance
#
# --------------------------------------------------------------------------------------------------------------------